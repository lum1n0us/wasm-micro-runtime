# Copyright (C) 2019 Intel Corporation.  All rights reserved.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
name: Run spec tests

inputs:
  arch:
    required: true
    type: string
  container_image:
    required: false
    type: string
  llvm_cache_key:
    required: true
    type: string
  os:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    # remove below two steps(about ocml) after wabt supporting latest GC proposal
    # use wat2wasm can generate expected wasm binaries
    - name: Set-up OCaml
      uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: 4.13

    - name: Set-up Ocamlbuild
      shell: bash
      run: opam install ocamlbuild dune menhir

    # RUN TESTS
    - name: run spec test for DEFAULT
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P
        echo "::notice:: Default test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for GC
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -G
        echo "::notice:: GC test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for MEMORY64
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -W
        echo "::notice:: MEMORY64 test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for MULTI_MEMORY
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -E
        echo "::notice:: MULTI_MEMORY test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for MULTI_MODULES
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -M
        echo "::notice:: MULTI_MODULES test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for SIMD
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -S
        echo "::notice:: SIMD test completed"
      working-directory: ./tests/wamr-test-suites

    - name: run spec test for THREADS
      shell: bash
      run: |
        eval $(opam env)
        ./test_wamr.sh -m ${{ inputs.arch }} -s spec -b -P -p
        echo "::notice:: THREADS test completed"
      working-directory: ./tests/wamr-test-suites
